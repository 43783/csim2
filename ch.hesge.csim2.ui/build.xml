<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project name="csim2 swing app script builder" default="default">
	
    <!-- script properties -->

	<property name="name" value="csim2-ui"/>
    <property name="version" value="1.3.19"/>
	<property name="author" value="Eric Harth"/>
	<property name="base.dir" value="."/>
	<property name="dist.dir" location="dist"/>
    <property name="mainclass" value="ch.hesge.csim2.ui.AppStartup"/>
    <property name="classpath" value="."/>
	
	<available file="${base.dir}/lib" type="dir" property="lib-folder-present2"/>

	<!-- initialization -->

	<target name="init">
		<tstamp />
	   	<mkdir dir="${dist.dir}/bin" />
	   	<mkdir dir="${dist.dir}/lib" />
	   	<mkdir dir="${dist.dir}/conf" />
	   	<mkdir dir="${dist.dir}/log" />
	</target>	

	<!-- cleaning -->
	
	<target name="clean">
	   	<delete dir="${dist.dir}" />
	</target>

	<!-- create script -->
	
    <target name="create-script">
		<echo file="${dist.dir}/csim2.cmd" append="false">
		@echo off
		start javaw -splash:conf/spashscreen.png -classpath bin/*;lib/* ch.hesge.csim2.ui.AppStartup %1 %2
		</echo>    	
    </target>

	<!-- copy dependencies -->

	<target name="copy-dependencies" if="lib-folder-present2">		
		<copy todir="${dist.dir}/lib">
			<fileset dir="${basedir}/lib" includes="**/*.jar" excludes="**/*src*.jar"/>
		</copy>		    	
    </target>
	
	<!-- copy configuration -->

	<target name="copy-conf">		
    	<copy todir="${dist.dir}/conf">
			<fileset dir="conf" includes="**/*.*" />
		</copy>		    	
    </target>
	
	<!-- build and copy engines/matchers -->

	<target name="copy-engines">
		<ant antfile="../ch.hesge.csim2.core/build.xml"                        dir="../ch.hesge.csim2.core" />
		<ant antfile="../ch.hesge.csim2.engine.ontologyloader/build.xml"       dir="../ch.hesge.csim2.engine.ontologyloader" />
		<ant antfile="../ch.hesge.csim2.engine.cppanalyzer/build.xml"          dir="../ch.hesge.csim2.engine.cppanalyzer" />
		<ant antfile="../ch.hesge.csim2.engine.cppinstrumenter/build.xml"      dir="../ch.hesge.csim2.engine.cppinstrumenter" />
		<ant antfile="../ch.hesge.csim2.engine.simulinkanalyzer/build.xml"     dir="../ch.hesge.csim2.engine.simulinkanalyzer" />
		<ant antfile="../ch.hesge.csim2.engine.simulinkinstrumenter/build.xml" dir="../ch.hesge.csim2.engine.simulinkinstrumenter" />
		<ant antfile="../ch.hesge.csim2.engine.javaanalyzer/build.xml"     	   dir="../ch.hesge.csim2.engine.javaanalyzer" />
		<ant antfile="../ch.hesge.csim2.engine.javainstrumenter/build.xml" 	   dir="../ch.hesge.csim2.engine.javainstrumenter" />
		<ant antfile="../ch.hesge.csim2.engine.traceloader/build.xml"          dir="../ch.hesge.csim2.engine.traceloader" />
		<ant antfile="../ch.hesge.csim2.engine.stemconceptanalyzer/build.xml"  dir="../ch.hesge.csim2.engine.stemconceptanalyzer" />
		<ant antfile="../ch.hesge.csim2.engine.stemmethodanalyzer/build.xml"   dir="../ch.hesge.csim2.engine.stemmethodanalyzer" />
		<ant antfile="../ch.hesge.csim2.matcher.tfidfmatcher/build.xml"        dir="../ch.hesge.csim2.matcher.tfidfmatcher" />
		<ant antfile="../ch.hesge.csim2.matcher.wtfidfmatcher/build.xml"       dir="../ch.hesge.csim2.matcher.wtfidfmatcher" />
		<ant antfile="../ch.hesge.csim2.matcher.sourcematcher/build.xml"       dir="../ch.hesge.csim2.matcher.sourcematcher" />
		<ant antfile="../ch.hesge.csim2.matcher.jaccardmatcher/build.xml"      dir="../ch.hesge.csim2.matcher.jaccardmatcher" />
	</target>

	<!-- distribution -->
	
	<target name="dist" depends="create-script,copy-conf,copy-dependencies,copy-engines">
        <jar destfile="${dist.dir}/bin/${name}-${version}.v${DSTAMP}${TSTAMP}.jar">
            <manifest>
		        <attribute name="Implementation-Vendor" value="HEG, Geneva, Switzerland" />
		        <attribute name="Implementation-Title" value="${name}" />
		        <attribute name="Implementation-Version" value="${version}" />
        		<attribute name="Built-By" value="${author}" />
            	<attribute name="Main-class" value="${mainclass}" />
                <attribute name="Class-Path" value="${classpath}"/>
            </manifest>
            <fileset dir="bin" includes="**/*.class"/>
            <fileset dir="bin" includes="**/*png"/>
        </jar>
    </target>
	
	<!-- default task -->
	
	<target name="default" depends="clean,init,dist" />

</project>
