package ch.hesge.csim2.ui.views;

import java.awt.BorderLayout;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTabbedPane;
import javax.swing.JTextArea;
import javax.swing.SwingUtilities;

import ch.hesge.csim2.ui.comp.ConsolePopup;
import ch.hesge.csim2.ui.comp.EngineTable;

@SuppressWarnings("serial")
public class ConsoleView extends JPanel implements ActionListener {

	// Private attribute
	private JTabbedPane tabbedPanel;
	private JTextArea consolePanel;
	private EngineTable engineTable;
	private ConsolePopup consoleContextMenu;

	/**
	 * Default constructor
	 */
	public ConsoleView() {
		initComponent();
	}

	/**
	 * Initialize the component
	 */
	private void initComponent() {

		setLayout(new BorderLayout(0, 0));

		tabbedPanel = new JTabbedPane(JTabbedPane.TOP);
		add(tabbedPanel, BorderLayout.CENTER);

		// Create the console panel
		consolePanel = new JTextArea();
		consolePanel.setEditable(true);
		consolePanel.setFont(new Font("Courier New", Font.PLAIN, 14));
		JScrollPane scrollPanel1 = new JScrollPane();
		scrollPanel1.setViewportView(consolePanel);
		tabbedPanel.addTab("Console", null, scrollPanel1, null);

		// Create a context menu for console log
		consoleContextMenu = new ConsolePopup(this);

		// Create the engine panel
		engineTable = new EngineTable();
		engineTable.addActionListener(this);
		JScrollPane scrollPanel2 = new JScrollPane();
		scrollPanel2.setViewportView(engineTable);
		tabbedPanel.addTab("Engine", null, scrollPanel2, null);
		
		initListeners();
	}

	/**
	 * Initialize component inner listeners
	 */
	private void initListeners() {

		// Listen to mouse click
		consolePanel.addMouseListener(new MouseAdapter() {

			public void mousePressed(MouseEvent e) {

				// Handle single right-click
				if (SwingUtilities.isRightMouseButton(e)) {
					consoleContextMenu.show(e.getComponent(), e.getX(), e.getY());
					e.consume();
				}
			}
		});
	}

	/**
	 * Handle action generated by the view.
	 */
	public void actionPerformed(ActionEvent e) {

		if (e.getSource() == engineTable) {
			MainView mainView = (MainView) SwingUtilities.getAncestorOfClass(MainView.class, this);
			mainView.startEngine(engineTable.getSelectedValue());
		}
	}

	/**
	 * Return the console log area (first tab in tabbed pane).
	 * 
	 * @return the consoleArea
	 */
	public JTextArea getConsolePanel() {
		return consolePanel;
	}

	/**
	 * Return the engine table (second tab in tabbed pane).
	 * 
	 * @return the engineTable
	 */
	public EngineTable getEnginePanel() {
		return engineTable;
	}

	/**
	 * Clear console logs and made log visible.
	 */
	public void clearLogConsole() {
		consolePanel.setText("");
	}

	/**
	 * Set current active visible tab from its index
	 * 
	 * @param tabIndex
	 */
	public void setActiveTabIndex(int tabIndex) {
		tabbedPanel.setSelectedIndex(tabIndex);
	}
	
}
