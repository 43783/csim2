package ch.hesge.csim2.ui.comp;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JComponent;
import javax.swing.JMenuItem;
import javax.swing.JPopupMenu;
import javax.swing.SwingUtilities;

import ch.hesge.csim2.core.logic.ApplicationLogic;
import ch.hesge.csim2.core.model.IEngine;
import ch.hesge.csim2.ui.views.MainView;

@SuppressWarnings("serial")
public class EnginePopup extends JPopupMenu implements ActionListener {

	// Private attributes
	private IEngine engine;
	private JMenuItem mnuStart;
	private JMenuItem mnuStop;

	/**
	 * Default constructor
	 */
	public EnginePopup(JComponent owner) {
		initComponent();
	}

	/**
	 * Initialize the component
	 */
	private void initComponent() {

		mnuStart = new JMenuItem("Start the engine");
		mnuStart.addActionListener(this);
		add(mnuStart);

		mnuStop = new JMenuItem("Stop the engine");
		mnuStop.addActionListener(this);
		add(mnuStop);
	}

	/**
	 * Return the engine this popup is linked to.
	 * 
	 * @return the engine
	 */
	public IEngine getEngine() {
		return engine;
	}

	/**
	 * Sets the engine this popup is linked to.
	 * 
	 * @param engine
	 *            the engine to set
	 */
	public void setEngine(IEngine engine) {

		this.engine = engine;
		
		if (engine != null) {
			
			if (ApplicationLogic.isEngineRunning(engine)) {
				mnuStart.setEnabled(false);
				mnuStop.setEnabled(true);
			}
			else {
				mnuStart.setEnabled(true);
				mnuStop.setEnabled(false);
			}
		}
		else {
			mnuStart.setEnabled(false);
			mnuStop.setEnabled(false);
		}
	}

	/**
	 * Handle action generated by menu.
	 */
	public void actionPerformed(ActionEvent e) {

		MainView mainView = (MainView) SwingUtilities.getAncestorOfClass(MainView.class, this.getInvoker());

		if (e.getSource() == mnuStart) {
			mainView.startEngine(engine);
		}
		else if (e.getSource() == mnuStop) {
			mainView.stopEngine(engine);
		}
	}
}
