package ch.hesge.csim2.ui.comp;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JMenuItem;
import javax.swing.JPopupMenu;
import javax.swing.SwingUtilities;

import ch.hesge.csim2.ui.views.MainView;

@SuppressWarnings("serial")
public class AnalysisPopup extends JPopupMenu implements ActionListener {

	// Private attribute
	private ProjectTree owner;
	
	private JMenuItem mnuSourceStem;
	private JMenuItem mnuConceptStem;
	private JMenuItem mnuMatching;
	private JMenuItem mnuTrace;
	private JMenuItem mnuTimeSeries;

	/**
	 * Default constructor
	 */
	public AnalysisPopup(ProjectTree owner) {

		this.owner = owner;

		mnuSourceStem = new JMenuItem("Show source stems");
		mnuSourceStem.addActionListener(this);
		add(mnuSourceStem);

		mnuConceptStem = new JMenuItem("Show concept stems");
		mnuConceptStem.addActionListener(this);
		add(mnuConceptStem);

		mnuMatching = new JMenuItem("Show matching view");
		mnuMatching.addActionListener(this);
		add(mnuMatching);

		mnuTrace = new JMenuItem("Show trace analysis");
		mnuTrace.addActionListener(this);
		add(mnuTrace);
		
		mnuTimeSeries = new JMenuItem("Show chart view");
		mnuTimeSeries.addActionListener(this);
		add(mnuTimeSeries);
		
	}

	/**
	 * Enable menus for source methods
	 */
	public void enableSourceStemMenu() {
		mnuSourceStem.setEnabled(true);
		mnuConceptStem.setEnabled(false);
		mnuMatching.setEnabled(false);
		mnuTrace.setEnabled(false);
		mnuTimeSeries.setEnabled(false);
	}

	/**
	 * Enable menus for step concepts
	 */
	public void enableConceptStemMenu() {
		mnuSourceStem.setEnabled(false);
		mnuConceptStem.setEnabled(true);
		mnuMatching.setEnabled(false);
		mnuTrace.setEnabled(false);
		mnuTimeSeries.setEnabled(false);
	}

	/**
	 * Enable menus for matching view
	 */
	public void enableMatchingMenu() {
		mnuSourceStem.setEnabled(false);
		mnuConceptStem.setEnabled(false);
		mnuMatching.setEnabled(true);
		mnuTrace.setEnabled(false);
		mnuTimeSeries.setEnabled(false);
	}
	
	/**
	 * Enable menus for trace analysis
	 */
	public void enableTraceMenu() {
		mnuSourceStem.setEnabled(false);
		mnuConceptStem.setEnabled(false);
		mnuMatching.setEnabled(false);
		mnuTrace.setEnabled(true);
		mnuTimeSeries.setEnabled(false);
	}

	/**
	 * Enable menus for chart analysis
	 */
	public void enableTimeSeriesMenu() {
		mnuSourceStem.setEnabled(false);
		mnuConceptStem.setEnabled(false);
		mnuMatching.setEnabled(false);
		mnuTrace.setEnabled(false);
		mnuTimeSeries.setEnabled(true);
	}

	/**
	 * Handle action generated by menu.
	 */
	public void actionPerformed(ActionEvent e) {

		MainView mainView = (MainView) SwingUtilities.getAncestorOfClass(MainView.class, owner);
		
		if (e.getSource() == mnuSourceStem) {
			mainView.showSourceStems();
		}
		else if (e.getSource() == mnuConceptStem) {
			mainView.showConceptStems();
		}
		else if (e.getSource() == mnuSourceStem) {
			mainView.showSourceStems();
		}
		else if (e.getSource() == mnuMatching) {
			mainView.showMatchingView();
		}
		else if (e.getSource() == mnuTrace) {
			mainView.showTraceView();
		}
		else if (e.getSource() == mnuTimeSeries) {
			mainView.showTimeSeriesView();
		}
	}
}
