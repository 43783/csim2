package ch.hesge.csim2.ui.comp;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JMenuItem;
import javax.swing.JPopupMenu;
import javax.swing.JSeparator;

import ch.hesge.csim2.ui.views.OntologyView;

@SuppressWarnings("serial")
public class ConceptPopup extends JPopupMenu implements ActionListener {

	// Private attributes
	private OntologyView view;
	private JMenuItem mnuNewConcept;
	private JMenuItem mnuDeleteConcept;
	private JMenuItem mnuNewLink;
	private JMenuItem mnuDeleteLink;
	private JMenuItem mnuProperties;

	/**
	 * Default constructor
	 */
	public ConceptPopup(OntologyView view) {
		this.view = view;
		initComponent();
	}

	/**
	 * Initialize the component
	 */
	private void initComponent() {
		
		mnuNewConcept = new JMenuItem("Create a new concept");
		mnuNewConcept.addActionListener(this);
		add(mnuNewConcept);

		mnuDeleteConcept = new JMenuItem("Delete the concept");
		mnuDeleteConcept.addActionListener(this);
		add(mnuDeleteConcept);

		add(new JSeparator());

		mnuNewLink = new JMenuItem("Create a new link");
		mnuNewLink.addActionListener(this);
		add(mnuNewLink);

		mnuDeleteLink = new JMenuItem("Delete the link");
		mnuDeleteLink.addActionListener(this);
		add(mnuDeleteLink);

		add(new JSeparator());

		mnuProperties = new JMenuItem("Properties");
		mnuProperties.addActionListener(this);
		add(mnuProperties);
	}
	
	/**
	 * Enable create concept menu and disable all others
	 */
	public void clearMenuState() {
		mnuNewConcept.setEnabled(false);
		mnuDeleteConcept.setEnabled(false);
		mnuNewLink.setEnabled(false);
		mnuDeleteLink.setEnabled(false);
		mnuProperties.setEnabled(false);
	}

	/**
	 * Enable/disable create concept menu
	 */
	public void setCreateConceptMenuState(boolean state) {
		mnuNewConcept.setEnabled(state);
	}

	/**
	 * Enable/disable delete concept menu
	 */
	public void setDeleteConceptMenuState(boolean state) {
		mnuDeleteConcept.setEnabled(state);
	}

	/**
	 * Enable/disable create link menu
	 */
	public void setCreateLinkMenuState(boolean state) {
		mnuNewLink.setEnabled(state);
	}

	/**
	 * Enable/disable create link menu
	 */
	public void setDeleteLinkMenuState(boolean state) {
		mnuDeleteLink.setEnabled(state);
	}

	/**
	 * Enable/disable properties menu and disable all others
	 */
	public void setPropertiesMenuState(boolean state) {
		mnuProperties.setEnabled(state);
	}

	/**
	 * Handle action generated by menu.
	 */
	public void actionPerformed(ActionEvent e) {

		if (e.getSource() == mnuNewConcept) {
//			view.createNewConcept();
		}
		else if (e.getSource() == mnuDeleteConcept) {
			view.deleteCurrentConcept();
		}
		else if (e.getSource() == mnuNewLink) {
//			view.startDraggingLink();
		}
		else if (e.getSource() == mnuDeleteLink) {
			view.deleteCurrentLink();
		}
		else if (e.getSource() == mnuProperties) {
			view.showConceptProperties();
		}
	}
}
