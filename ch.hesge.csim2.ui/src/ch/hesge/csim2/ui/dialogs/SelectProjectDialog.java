package ch.hesge.csim2.ui.dialogs;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Window;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.util.List;

import javax.swing.AbstractAction;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.WindowConstants;

import ch.hesge.csim2.core.logic.ApplicationLogic;
import ch.hesge.csim2.core.model.Project;
import ch.hesge.csim2.ui.comp.ProjectTable;
import ch.hesge.csim2.ui.utils.SwingUtils;

@SuppressWarnings("serial")
public class SelectProjectDialog extends JDialog implements ActionListener {

	// Private attributes
	private Project project;
	private ProjectTable projectTable;
	private JButton btnOK;
	private JButton btnCancel;
	private boolean dialogResult;

	/**
	 * Create the dialog with owner.
	 */
	public SelectProjectDialog(Window parent) {
		super(parent);
		initComponents();
	}

	/**
	 * Initialize the view components
	 */
	private void initComponents() {

		// Dialog configuration
		setTitle("New Project");
		setBounds(0, 0, 220, 245);
		setLocationRelativeTo(getParent());
		setModalityType(ModalityType.APPLICATION_MODAL);
		setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
		setResizable(false);

		// Create layout structure
		getContentPane().setLayout(new BorderLayout());
		JPanel mainPane = new JPanel();
		getContentPane().add(mainPane, BorderLayout.CENTER);
		mainPane.setLayout(new BorderLayout(0, 0));
		JPanel btnPane = new JPanel();
		FlowLayout flowLayout = (FlowLayout) btnPane.getLayout();
		flowLayout.setAlignment(FlowLayout.RIGHT);
		getContentPane().add(btnPane, BorderLayout.SOUTH);

		// Initialize project list
		projectTable = new ProjectTable();
		projectTable.addActionListener(this);
		JScrollPane scrollbar = new JScrollPane();
		scrollbar.setViewportView(projectTable);
		mainPane.add(scrollbar, BorderLayout.CENTER);

		// Initialize ok button
		btnOK = new JButton("OK");
		btnOK.setPreferredSize(new Dimension(100, 25));
		btnOK.addActionListener(this);
		btnPane.add(btnOK);

		// Initialize cancel button
		btnCancel = new JButton("Cancel");
		btnCancel.setPreferredSize(new Dimension(100, 25));
		btnCancel.addActionListener(this);
		btnPane.add(btnCancel);

		initListeners();

		// Initialize the view when visible
		SwingUtils.invokeWhenVisible(this.getRootPane(), new Runnable() {
			@Override
			public void run() {
				initView();
			}
		});
	}

	/**
	 * Initialize component listeners
	 */
	private void initListeners() {

		// Replace default ESCAPE action
		SwingUtils.setInputKeyAction(this.getRootPane(), KeyEvent.VK_ESCAPE, "ESCAPE", new AbstractAction() {
			@Override
			public void actionPerformed(ActionEvent e) {
				SelectProjectDialog.this.actionPerformed(new ActionEvent(btnCancel, e.getID(), null));
			}
		});
	}

	/**
	 * Initialize the view and its components.
	 */
	private void initView() {

		// Retrieve project list
		List<Project> projects = ApplicationLogic.getProjects();

		// Initialize the project list
		projectTable.setProjects(projects);
	}

	/**
	 * Return dialog result.
	 * true = user clicked on OK
	 * false = use clicked on Cancel or ESC
	 * 
	 * @return the dialogResult
	 */
	public boolean getDialogResult() {
		return dialogResult;
	}

	/**
	 * Return the selected project
	 * @return
	 *         the project
	 */
	public Project getProject() {
		return project;
	}

	
	/**
	 * Handle action generated by the view.
	 */
	public void actionPerformed(ActionEvent e) {

		if (e.getSource() == projectTable || e.getSource() == btnOK) {			
			project = projectTable.getSelectedValue();
			dialogResult = true;
			this.setVisible(false);
		}
		else if (e.getSource() == btnCancel) {
			dialogResult = false;
			this.setVisible(false);
		}
	}
}
